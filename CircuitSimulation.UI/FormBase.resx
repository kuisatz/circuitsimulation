<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAFRQAAAEAGAB4BQAAFgAAACgAAAAVAAAAKAAAAAEAGAAAAAAAAAAAAGAAAABgAAAAAAAAAAAA
        AABqampqampqampqampqampqampqampqampqamppaWlqampqampqampra2tsbGxsbGxtbW1vb29xcXFz
        c3N0dHQAampqampqampqampqampqampqampqampqampqa2trampqampqa2trbW1tbm5ub29vcHBwcnJy
        dXV1d3d3enp6AGpqampqampqampqampqampqampqampqampqamtra2tra2xsbG1tbW5ubm9vb3JycnR0
        dHZ2dnl5eXx8fH9/fwBqampqampqampqampqampqampqampqampra2tra2tsbGxtbW1ubm5vb29ycnJ0
        dHR3d3d6enp9fX2AgICDg4MAa2tra2trampqampqampqampqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        dHR0d3d3eXl5fX19gYGBhYWFh4eHAGtra2tra2tra2pqampqampqampqagAAAAAAAP///4CAgICAgICA
        gICAgAAAAAAAAHx8fICAgISEhIiIiIuLiwBra2tra2tra2tra2tqampqampqampqampra2sAAAD////A
        wMDAwMCAgICAgICAgIAAAACCgoKFhYWJiYmNjY0Aa2tra2tra2tra2tra2tra2trampqampqa2trbGxs
        AAAA////wMDAwMDAwMDAwMDAgICAAAAAhoaGi4uLjo6OAGtra2tra2tra2trawAAAAAAAAAAAAAAAAAA
        AAAAAAAAAP///8DAwMDAwMDAwMDAwICAgAAAAIiIiIuLi4+PjwBsbGxsbGxra2tra2sAAAD///+AgICA
        gICAgICAgIAAAAD////AwMDAwMDAwMDAwMCAgIAAAACIiIiMjIyRkZEAbGxsbGxsbGxsa2trAAAA////
        wMDAwMDAwMDAAAAA////wMDAwMDAwMDAgICAgICAAAAAhYWFiIiIjIyMkZGRAGxsbGxsbGxsbGxsbAAA
        AP///8DAwAAAAAAAAP///////////////////wAAAAAAAIGBgYWFhYiIiIyMjJCQkABsbGxsbGxsbGxs
        bGwAAAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9fX2AgICEhISHh4eLi4uPj48AbGxsbGxs
        bGxsbGxsAAAA////wMDAwMDAwMDAwMDAwMDAwMDAwMDAgICAAAAAfHx8f39/g4ODhoaGioqKjo6OAGxs
        bGxsbGxsbGxsbAAAAP///8DAwMDAwMDAwMDAwMDAwMDAwICAgAAAAHd3d3p6en19fYGBgYWFhYiIiIyM
        jABsbGxsbGxsbGxsbGwAAAD///////////////////////////8AAABzc3N1dXV4eHh6enp+fn6BgYGF
        hYWJiYkAbGxsbGxsbGxsbGxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAb29vcXFxdHR0dnZ2eXl5e3t7
        fn5+gYGBhYWFAGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG1tbW1tbW5ubm5ubnBwcHFxcXR0dHZ2
        dnh4eHt7e319fYCAgABsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxtbW1tbW1tbW1ubm5ubm5wcHBx
        cXFzc3N1dXV3d3d6enp8fHwAbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbW1tbW1tbW1tbm5u
        bm5ub29vcHBwcnJydHR0dXV1eHh4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>